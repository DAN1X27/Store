CREATE SEQUENCE IF NOT EXISTS cart_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS cart_items_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS email_keys_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS item_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS items_images_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS items_rating_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS items_reviews_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS liked_reviews_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS ordered_items_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS orders_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS person_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE cart
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id INTEGER,
    price    DOUBLE PRECISION                         NOT NULL,
    CONSTRAINT cart_pkey PRIMARY KEY (id)
);

CREATE TABLE cart_items
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cart_id     INTEGER,
    item_id     INTEGER,
    items_count INTEGER                                  NOT NULL,
    CONSTRAINT cart_items_pkey PRIMARY KEY (id)
);

CREATE TABLE email_keys
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key          INTEGER                                  NOT NULL,
    expired_time TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    attempts     INTEGER,
    email        VARCHAR                                  NOT NULL,
    CONSTRAINT email_keys_pkey PRIMARY KEY (id)
);

CREATE TABLE item
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR                                  NOT NULL,
    count       INTEGER,
    price       DOUBLE PRECISION,
    category    VARCHAR                                  NOT NULL,
    description VARCHAR                                  NOT NULL,
    rating      DOUBLE PRECISION                         NOT NULL,
    CONSTRAINT item_pkey PRIMARY KEY (id)
);

CREATE TABLE item_cart
(
    cart_id INTEGER,
    item_id INTEGER
);

CREATE TABLE item_order
(
    item_id  INTEGER,
    order_id INTEGER
);

CREATE TABLE items_grades
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id  INTEGER,
    grade    INTEGER                                  NOT NULL,
    owner_id INTEGER,
    CONSTRAINT items_rating_pkey PRIMARY KEY (id)
);

CREATE TABLE items_images
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id    INTEGER,
    image_uuid VARCHAR                                 NOT NULL,
    CONSTRAINT items_images_pkey PRIMARY KEY (id)
);

CREATE TABLE items_reviews
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id    INTEGER                                  NOT NULL,
    owner_id   INTEGER                                  NOT NULL,
    likes      INTEGER                                  NOT NULL,
    comment    VARCHAR                                  NOT NULL,
    created_at date                                     NOT NULL,
    grade      INTEGER                                  NOT NULL,
    CONSTRAINT items_reviews_pkey PRIMARY KEY (id)
);

CREATE TABLE liked_reviews
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id  INTEGER,
    review_id INTEGER,
    CONSTRAINT liked_reviews_pkey PRIMARY KEY (id)
);

CREATE TABLE ordered_items
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_id    INTEGER,
    item_id     INTEGER,
    items_count INTEGER,
    CONSTRAINT ordered_items_pkey PRIMARY KEY (id)
);

CREATE TABLE orders
(
    id               INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id         INTEGER,
    price            INTEGER,
    created_at       TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    order_ready_date date                                     NOT NULL,
    is_ready         BOOLEAN,
    storage_date     date                                     NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (id)
);

CREATE TABLE person
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username   VARCHAR                                  NOT NULL,
    email      VARCHAR                                  NOT NULL,
    password   VARCHAR                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    role       VARCHAR                                  NOT NULL,
    status     VARCHAR DEFAULT 'REGISTERED'             NOT NULL,
    CONSTRAINT person_pkey PRIMARY KEY (id)
);

CREATE TABLE tokens
(
    user_id    INTEGER NOT NULL,
    status     VARCHAR NOT NULL,
    id         VARCHAR NOT NULL,
    expired_at date    NOT NULL,
    CONSTRAINT tokens_pkey PRIMARY KEY (id)
);

ALTER TABLE cart
    ADD CONSTRAINT cart_owner_id_key UNIQUE (owner_id);

ALTER TABLE email_keys
    ADD CONSTRAINT email_keys_email_key UNIQUE (email);

ALTER TABLE item
    ADD CONSTRAINT item_name_key UNIQUE (name);

ALTER TABLE items_images
    ADD CONSTRAINT items_images_image_uuid_key UNIQUE (image_uuid);

ALTER TABLE person
    ADD CONSTRAINT person_email_key UNIQUE (email);

ALTER TABLE person
    ADD CONSTRAINT person_username_key UNIQUE (username);

ALTER TABLE cart_items
    ADD CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES cart (id) ON DELETE CASCADE;

ALTER TABLE cart_items
    ADD CONSTRAINT cart_items_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE cart
    ADD CONSTRAINT cart_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES person (id) ON DELETE CASCADE;

ALTER TABLE item_cart
    ADD CONSTRAINT item_cart_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES cart (id) ON DELETE CASCADE;

ALTER TABLE item_cart
    ADD CONSTRAINT item_cart_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE item_order
    ADD CONSTRAINT item_order_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE item_order
    ADD CONSTRAINT item_order_order_id_fkey FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE;

ALTER TABLE items_grades
    ADD CONSTRAINT items_grades_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES person (id) ON DELETE NO ACTION;

ALTER TABLE items_images
    ADD CONSTRAINT items_images_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE NO ACTION;

ALTER TABLE items_grades
    ADD CONSTRAINT items_rating_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE items_reviews
    ADD CONSTRAINT items_reviews_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE items_reviews
    ADD CONSTRAINT items_reviews_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES person (id) ON DELETE CASCADE;

ALTER TABLE liked_reviews
    ADD CONSTRAINT liked_reviews_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES person (id) ON DELETE CASCADE;

ALTER TABLE liked_reviews
    ADD CONSTRAINT liked_reviews_review_id_fkey FOREIGN KEY (review_id) REFERENCES items_reviews (id) ON DELETE CASCADE;

ALTER TABLE ordered_items
    ADD CONSTRAINT ordered_items_item_id_fkey FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE CASCADE;

ALTER TABLE ordered_items
    ADD CONSTRAINT ordered_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE;

ALTER TABLE orders
    ADD CONSTRAINT orders_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES person (id) ON DELETE CASCADE;

ALTER TABLE tokens
    ADD CONSTRAINT tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES person (id) ON DELETE CASCADE;